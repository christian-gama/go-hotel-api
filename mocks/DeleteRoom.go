// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	errorutil "github.com/christian-gama/go-booking-api/internal/domain/errorutil"
	mock "github.com/stretchr/testify/mock"
)

// DeleteRoom is an autogenerated mock type for the DeleteRoom type
type DeleteRoom struct {
	mock.Mock
}

// Handle provides a mock function with given fields: uuid
func (_m *DeleteRoom) Handle(uuid string) (bool, []*errorutil.Error) {
	ret := _m.Called(uuid)

	var r0 bool
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(uuid)
	} else {
		r0 = ret.Get(0).(bool)
	}

	var r1 []*errorutil.Error
	if rf, ok := ret.Get(1).(func(string) []*errorutil.Error); ok {
		r1 = rf(uuid)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).([]*errorutil.Error)
		}
	}

	return r0, r1
}

type mockConstructorTestingTNewDeleteRoom interface {
	mock.TestingT
	Cleanup(func())
}

// NewDeleteRoom creates a new instance of DeleteRoom. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDeleteRoom(t mockConstructorTestingTNewDeleteRoom) *DeleteRoom {
	mock := &DeleteRoom{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
