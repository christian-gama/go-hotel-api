// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	http "github.com/christian-gama/go-booking-api/internal/presenter/http"
	mock "github.com/stretchr/testify/mock"
)

// Controller is an autogenerated mock type for the Controller type
type Controller struct {
	mock.Mock
}

// Handle provides a mock function with given fields: _a0
func (_m *Controller) Handle(_a0 http.Request) http.Response {
	ret := _m.Called(_a0)

	var r0 http.Response
	if rf, ok := ret.Get(0).(func(http.Request) http.Response); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(http.Response)
	}

	return r0
}

type mockConstructorTestingTNewController interface {
	mock.TestingT
	Cleanup(func())
}

// NewController creates a new instance of Controller. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewController(t mockConstructorTestingTNewController) *Controller {
	mock := &Controller{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
