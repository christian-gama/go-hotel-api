// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	router "github.com/christian-gama/go-booking-api/internal/shared/infra/router"
	mock "github.com/stretchr/testify/mock"
)

// Registerer is an autogenerated mock type for the Registerer type
type Registerer struct {
	mock.Mock
}

// Register provides a mock function with given fields: _a0
func (_m *Registerer) Register(_a0 *router.Router) {
	_m.Called(_a0)
}

type mockConstructorTestingTNewRegisterer interface {
	mock.TestingT
	Cleanup(func())
}

// NewRegisterer creates a new instance of Registerer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRegisterer(t mockConstructorTestingTNewRegisterer) *Registerer {
	mock := &Registerer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
