version: '3.8'
services:
  psql:
    container_name: go_booking_psql
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
    volumes:
      - ./.generated/db_data/:/var/lib/postgresql/data
    ports:
      - "${DB_EXPOSED_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "${DB_HOST}", "-p", "${DB_PORT}"]
      interval: 15s
      timeout: 3s
      retries: 3

  api:
    container_name: go_booking_api
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - WORKDIR=${WORKDIR}
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env.${ENV}
    depends_on:
      - ${DB_HOST}
    links:
      - ${DB_HOST}
    volumes:
      - ./.generated/.cache/go:/root/.cache
      - ./cmd:${WORKDIR}/cmd
      - ./migrations:${WORKDIR}/migrations
      - ./internal:${WORKDIR}/internal
      - ./.env.dev:${WORKDIR}/.env.dev
      - ./.env.prod:${WORKDIR}/.env.prod
      - ./.env.test:${WORKDIR}/.env.test
      - ./.golangci.yml:${WORKDIR}/.golangci.yml
      - ./go.mod:${WORKDIR}/go.mod
      - ./go.sum:${WORKDIR}/go.sum
      - ./Makefile:${WORKDIR}/Makefile
      - ./vendor:${WORKDIR}/vendor
      - ./.generated/coverage:${WORKDIR}/.generated/coverage
      - ./.generated/build:${WORKDIR}/.generated/build
      - ./mocks:${WORKDIR}/mocks
      - ./test:${WORKDIR}/test
  
  psql_test:
    container_name: go_booking_psql_test
    image: postgres:14-alpine
    restart: "no"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
    tmpfs:
      - /var/lib/postgresql/data
    ports:
      - "${DB_EXPOSED_PORT}:${DB_PORT}"
