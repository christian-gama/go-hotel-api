version: '3.8'
services:
  psql:
    container_name: go_booking_psql
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
    volumes:
      - ./.generated/db_data/:/var/lib/postgresql/data
    ports:
      - "${DB_EXPOSED_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD", "pg_isready", "-h", "${DB_HOST}", "-p", "${DB_PORT}"]
      interval: 15s
      timeout: 3s
      retries: 3

  api:
    container_name: go_booking_api
    restart: always
    build: 
      context: .
      dockerfile: Dockerfile
      args:
        - WORKDIR=/go/src/github.com/christian-gama/go-booking-api
    ports:
      - "${APP_PORT}:${APP_PORT}"
    env_file:
      - .env.${ENV}
    depends_on:
      - ${DB_HOST}
    links:
      - ${DB_HOST}
    volumes:
      - ./.generated/.cache/go:/root/.cache
      - ./cmd:/go/src/github.com/christian-gama/go-booking-api/cmd
      - ./migrations:/go/src/github.com/christian-gama/go-booking-api/migrations
      - ./internal:/go/src/github.com/christian-gama/go-booking-api/internal
      - ./.env.dev:/go/src/github.com/christian-gama/go-booking-api/.env.dev
      - ./.env.prod:/go/src/github.com/christian-gama/go-booking-api/.env.prod
      - ./.env.test:/go/src/github.com/christian-gama/go-booking-api/.env.test
      - ./.golangci.yml:/go/src/github.com/christian-gama/go-booking-api/.golangci.yml
      - ./pkg:/go/src/github.com/christian-gama/go-booking-api/pkg
      - ./go.mod:/go/src/github.com/christian-gama/go-booking-api/go.mod
      - ./go.sum:/go/src/github.com/christian-gama/go-booking-api/go.sum
      - ./Makefile:/go/src/github.com/christian-gama/go-booking-api/Makefile
      - ./vendor:/go/src/github.com/christian-gama/go-booking-api/vendor
      - ./.generated/coverage:/go/src/github.com/christian-gama/go-booking-api/.generated/coverage
      - ./.generated/build:/go/src/github.com/christian-gama/go-booking-api/.generated/build
      - ./mocks:/go/src/github.com/christian-gama/go-booking-api/mocks
      - ./test:/go/src/github.com/christian-gama/go-booking-api/test
  
  psql_test:
    container_name: go_booking_psql_test
    image: postgres:14-alpine
    restart: "no"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_HOST=${DB_HOST}
    tmpfs:
      - /var/lib/postgresql/data
    ports:
      - "${DB_EXPOSED_PORT}:${DB_PORT}"
